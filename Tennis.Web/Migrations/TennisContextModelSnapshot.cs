// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tennis.DAL.Context;

namespace Tennis.Web.Migrations
{
    [DbContext(typeof(TennisContext))]
    partial class TennisContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Tennis.DAL.Models.Fine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Amount")
                        .HasColumnType("DECIMAL(7,2)");

                    b.Property<int>("FineNumber")
                        .HasMaxLength(10)
                        .HasColumnType("INT");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("DATE");

                    b.Property<DateTime>("handOutDate")
                        .HasColumnType("DATE");

                    b.HasKey("Id");

                    b.HasIndex("FineNumber")
                        .IsUnique();

                    b.HasIndex("MemberId");

                    b.ToTable("tbl_fine");
                });

            modelBuilder.Entity("Tennis.DAL.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Date")
                        .HasColumnType("DATE");

                    b.Property<string>("GameNumber")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.Property<int>("LeagueId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameNumber")
                        .IsUnique();

                    b.HasIndex("LeagueId");

                    b.HasIndex("MemberId");

                    b.ToTable("tbl_game");
                });

            modelBuilder.Entity("Tennis.DAL.Models.GameResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("ScoreOpponent")
                        .HasMaxLength(3)
                        .HasColumnType("INT");

                    b.Property<int>("ScoreTeamMember")
                        .HasMaxLength(3)
                        .HasColumnType("INT");

                    b.Property<int>("SetNr")
                        .HasMaxLength(3)
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("SetNr", "GameId")
                        .IsUnique();

                    b.ToTable("tbl_game_result");
                });

            modelBuilder.Entity("Tennis.DAL.Models.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR(10)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("tbl_gender");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Male"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Female"
                        });
                });

            modelBuilder.Entity("Tennis.DAL.Models.League", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR(10)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("tbl_league");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Junoir"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Pro"
                        });
                });

            modelBuilder.Entity("Tennis.DAL.Models.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Addition")
                        .HasColumnType("VARCHAR(2)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("VARCHAR(70)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("DATE");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("FederationNr")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(25)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(35)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("VARCHAR(6)");

                    b.Property<string>("PhoneNr")
                        .HasColumnType("VARCHAR(15)");

                    b.Property<string>("Zipcode")
                        .IsRequired()
                        .HasColumnType("VARCHAR(6)");

                    b.HasKey("Id");

                    b.HasIndex("FederationNr")
                        .IsUnique();

                    b.HasIndex("GenderId");

                    b.ToTable("tbl_member");
                });

            modelBuilder.Entity("Tennis.DAL.Models.MemberRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("DATE");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("DATE");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("MemberId", "RoleId", "StartDate", "EndDate")
                        .IsUnique();

                    b.ToTable("tbl_member_role");
                });

            modelBuilder.Entity("Tennis.DAL.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("tbl_role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "User"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("Tennis.DAL.Models.Fine", b =>
                {
                    b.HasOne("Tennis.DAL.Models.Member", "Member")
                        .WithMany("Fines")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("Tennis.DAL.Models.Game", b =>
                {
                    b.HasOne("Tennis.DAL.Models.League", "League")
                        .WithMany()
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tennis.DAL.Models.Member", "Member")
                        .WithMany("Games")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("League");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("Tennis.DAL.Models.GameResult", b =>
                {
                    b.HasOne("Tennis.DAL.Models.Game", "Game")
                        .WithMany("Results")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Tennis.DAL.Models.Member", b =>
                {
                    b.HasOne("Tennis.DAL.Models.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("Tennis.DAL.Models.MemberRole", b =>
                {
                    b.HasOne("Tennis.DAL.Models.Member", "Member")
                        .WithMany("Roles")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tennis.DAL.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Tennis.DAL.Models.Game", b =>
                {
                    b.Navigation("Results");
                });

            modelBuilder.Entity("Tennis.DAL.Models.Member", b =>
                {
                    b.Navigation("Fines");

                    b.Navigation("Games");

                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
